import telebot
import random
import time
from telebot import types
import smtplib
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
from re import *
import config


bot = telebot.TeleBot(config.TOKEN)

# –£–∫–∞–∑—ã–≤–∞–µ–º –∫–∞–∫–æ–π —Ç–µ–∫—Å—Ç –º—ã –±—É–¥–µ–º –∂–¥–∞—Ç—å –æ—Ç –±–æ—Ç–∞, –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω–æ–µ –±—É–¥–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ '–î–∞–Ω–Ω—ã–µ –≤–≤–µ–¥–µ–Ω—ã –Ω–µ–≤–µ—Ä–Ω–æ'
status = ["–ó–∞–º–µ–Ω–∞ –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–∞", "–®–ª–µ–π—Ñ –∑–∞—Ä—è–¥–∫–∏", "–ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –ø–∏—Ç–∞–Ω–∏—è",
          "–î–∏—Å–ø–ª–µ–π–Ω—ã–π –º–æ–¥—É–ª—å", "–°—Ç–µ–∫–ª–æ –¥–∏—Å–ø–ª–µ–π–Ω–æ–≥–æ –º–æ–¥—É–ª—è", "–ó–∞–¥–Ω—è—è –∫—Ä—ã—à–∫–∞", "–û—Å–Ω–æ–≤–Ω–∞—è –∫–∞–º–µ—Ä–∞", "–§—Ä–æ–Ω—Ç–∞–ª—å–Ω–∞—è –∫–∞–º–µ—Ä–∞",
          "–°—Ç–µ–∫–ª–æ –∫–∞–º–µ—Ä—ã", "–ú–æ–¥–µ–º–Ω–∞—è —á–∞—Å—Ç—å", "–ö–æ—Ä–æ—Ç–∫–æ–µ –∑–∞–º—ã–∫–∞–Ω–∏–µ", "–ß–∏—Å—Ç–∫–∞ –ø–æ—Å–ª–µ –ø–æ–ø–∞–¥–∞–Ω–∏—è –≤–ª–∞–≥–∏",
          "–£ –º–µ–Ω—è –¥—Ä—É–≥–æ–π –∑–∞–ø—Ä–æ—Å"]
 
inc_type = []  # –•—Ä–∞–Ω–∏—Ç –≤ —Å–µ–±–µ —Ç–∏–ø –∑–∞—è–≤–∫–∏
cli_num = []  # –•—Ä–∞–Ω–∏—Ç –≤ —Å–µ–±–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∑–∞—è–≤–∏—Ç–µ–ª—è
cli_mail = []  # –•—Ä–∞–Ω–∏—Ç –≤ —Å–µ–±–µ –ø–æ—á—Ç—É –∑–∞—è–≤–∏—Ç–µ–ª—è
hello_count = []  # –•—Ä–∞–Ω–∏—Ç –≤ —Å–µ–±–µ –¥–∞–Ω–Ω—ã–µ –æ —Ç–æ–º –Ω—É–∂–Ω–æ –ª–∏ –∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º

#–∑–∞–±–µ–∑–ø–µ—á—É—î –≤–∏–∫–Ω–∞–Ω–Ω—è –∫–æ–¥—É –Ω–∞–≤—ñ—Ç—å, —è–∫—â–æ —î —è–∫—ñ—Å—å –ø–æ–º–∏–ª–∫–∏
@bot.message_handler(commands=["test"]) #–°–æ–∑–¥–∞–µ–º –∫–æ–º–∞–Ω–¥—É
def start(message):
    try: #–ó–∞–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –≤—Å–µ –≤ try
        bot.send_message(message.chat.id, "<b>–í—Å–µ –≤ –ø–æ—Ä—è–¥–∫–µ!</b>" , parse_mode="HTML") 
        #bot.forward_message(config.owner, message.chat.id, message.message_id)
    except:
        bot.send_message(config.owner, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫!')


@bot.message_handler(commands=['start'])
def welcome(message):
    inc_type.clear()
    cli_num.clear()
    cli_mail.clear()
    # keyboard
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("üõ†–ó–∞–ø—Ä–æ—Å –Ω–∞ —Ä–µ–º–æ–Ω—Ç")
    item2 = types.KeyboardButton("‚úâÔ∏è–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏?")
    item3= types.KeyboardButton("üåç–ì–¥–µ –Ω–∞—Å –Ω–∞–π—Ç–∏")
 
    markup.add(item1, item2,item3)
    if len(hello_count) == 0:
        bot.send_message(message.chat.id, "–î–æ–±—Ä—ã–π –¥–µ–Ω—å! {0.first_name}! \n–Ø –±–æ—Ç —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ —Ü–µ–Ω—Ç—Ä–∞ - <b>{1.first_name}</b>, –ú–æ—è —Ü–µ–ª—å, –ø–æ–º–æ—á—å –≤—ã–±—Ä–∞—Ç—å —É—Å–ª—É–≥—É –ø–æ —Ä–µ–º–æ–Ω—Ç—É —Ç–µ—Ö–Ω–∏–∫–∏ Apple –∏ –ø–µ—Ä–µ–¥–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–±–ª–µ–º–µ –Ω–∞—à–µ–º—É —Å–µ—Ä–≤–∏—Å–Ω–æ–º—É –∏–Ω–∂–µ–Ω–µ—Ä—É!".format(message.from_user, bot.get_me()),
            parse_mode='html', reply_markup=markup)
    else:
        bot.send_message(message.chat.id,
                                 "–í—ã–±–µ—Ä–µ—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –í–∞—Å –ø—É–Ω–∫—Ç –º–µ–Ω—é, —á—Ç–æ–± –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É ".format(
                                     message.from_user, bot.get_me()),
                                 parse_mode='html', reply_markup=markup)
    hello_count.insert(1, 1)  # –û—Ç–º–µ—á–∞–µ–º —Ñ–∞–∫—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è

@bot.message_handler(commands=["help"])
def start(message):
    if int(message.chat.id) == config.owner:
        try:
            bot.send_message(message.chat.id, '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n\n/test ‚Äî –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –±–æ—Ç–∞\n/id ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–≤–æ–π ID\n/send - (–∫–æ–º–∞–Ω–¥–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤) –∫–∞–∂–¥—ã–π —Ä–∞–∑ –ø–µ—Ä–µ–¥ –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É, –ø–æ—Å–ª–µ —á–µ–≥–æ –Ω—É–∂–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –∂–µ–ª–∞–µ–º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.\n/start - start - –µ—Å–ª–∏ –±–æ—Ç –Ω–∞—á–∞–ª –≤–µ—Å—Ç–∏ —Å–µ–±—è –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ, –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É –∏ –≤—Å–µ –ø—Ä–æ–π–¥–µ—Ç' )
        except:
            bot.send_message(message.chat.id, "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫! –û—à–∏–±–∫–∞ –≤–æ–∑–Ω–∏–∫–ª–∞ –≤ –±–ª–æ–∫–µ –∫–æ–¥–∞:\n<code>@bot.message_handler(commands=['send_message'])</code>", parse_mode='HTML')
    else:
        bot.send_message(message.chat.id, '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n\n/test ‚Äî –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –±–æ—Ç–∞\n/id ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–≤–æ–π ID\n/start - –µ—Å–ª–∏ –±–æ—Ç –Ω–∞—á–∞–ª –≤–µ—Å—Ç–∏ —Å–µ–±—è –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ, –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É –∏ –≤—Å–µ –ø—Ä–æ–π–¥–µ—Ç')
        bot.send_message(config.owner,'–ü—Ä–∏–≤–µ—Ç, —Ö–æ–∑—è–∏–Ω! ' + str(message.from_user.first_name) + ' –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –∫–æ–º–∞–Ω–¥—É /help')
        bot.forward_message(config.owner, message.chat.id, message.message_id)

@bot.message_handler(content_types=['text'])
def statup(message):
    inc_type.clear()
    if message.chat.type == 'private':
        if message.text == 'üõ†–ó–∞–ø—Ä–æ—Å –Ω–∞ —Ä–µ–º–æ–Ω—Ç':
            key1 = types.ReplyKeyboardMarkup(True, False)
            button_phone = types.KeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", request_contact=True)
            key1.row(button_phone)
            key1.row('–í–≤–µ—Å—Ç–∏ –ø–æ—á—Ç—É –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏')
            key1.row('‚ìÇ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
            key1.one_time_keyboard = True
            if len(hello_count) == 0:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–¥–æ—Ä–æ–≤–∞–ª–∏—Å—å –ª–∏ –º—ã —Ä–∞–Ω–µ–µ
                bot.send_message(message.chat.id,
                                 "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}!\n–Ø - <b>{1.first_name}</b>, –ø–æ–º–æ–≥—É —Ç–µ–±–µ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞—è–≤–∫—É."
                                 " –û—Ç–ø—Ä–∞–≤—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–ª–∏ –ø–æ—á—Ç—É, —á—Ç–æ–± –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É ".format(
                                     message.from_user, bot.get_me()),
                                 parse_mode='html', reply_markup=key1)
         
            elif message.text == '‚ìÇ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
                welcome(message)

         
            else:
                bot.send_message(message.chat.id,
                                 "–í—ã–±–µ—Ä–µ—Ç–µ —Å—Ä–µ–¥—Å—Ç–≤–æ –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏, —á—Ç–æ–± –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É ".format(
                                     message.from_user, bot.get_me()),
                                 parse_mode='html', reply_markup=key1)
            hello_count.insert(1, 1)  # –û—Ç–º–µ—á–∞–µ–º —Ñ–∞–∫—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è

        elif message.text == '‚úâÔ∏è–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏?':
            bot.send_message(message.chat.id, 
                '''
–ù–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:
–ö–∏–µ–≤—Å–∫–∏–π –æ—Ñ–∏—Å    - +380*********
–•–∞—Ä—å–∫–æ–≤—Å–∫–∏–π –æ—Ñ–∏—Å - +380*********
                ''')
 
            key1 = types.ReplyKeyboardMarkup(True, False)
            button_phone = types.KeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", request_contact=True)
            key1.row(button_phone)
            key1.row('–í–≤–µ—Å—Ç–∏ –ø–æ—á—Ç—É –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏')
            key1.row('Online –ø–æ–º–æ—â—å')
            key1.row('‚ìÇ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
            key1.one_time_keyboard = True
            if len(hello_count) == 0:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–¥–æ—Ä–æ–≤–∞–ª–∏—Å—å –ª–∏ –º—ã —Ä–∞–Ω–µ–µ
                bot.send_message(message.chat.id,
                                 "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}!\n–Ø - <b>{1.first_name}</b>, –ø–æ–º–æ–≥—É —Ç–µ–±–µ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞—è–≤–∫—É."
                                 " –û—Ç–ø—Ä–∞–≤—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–ª–∏ –ø–æ—á—Ç—É, —á—Ç–æ–± –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É ".format(
                                     message.from_user, bot.get_me()),
                                 parse_mode='html', reply_markup=key1)
         
            elif message.text == '‚ìÇ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
                welcome(message)

            elif message.text == 'Online –ø–æ–º–æ—â—å':
                bot.send_message(message.chat.id, "–°–æ–µ–¥–∏–Ω—è—é —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º")
                callback_request()

         
            else:
                bot.send_message(message.chat.id,
                                 "–í—ã–±–µ—Ä–µ—Ç–µ —Å—Ä–µ–¥—Å—Ç–≤–æ –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏, —á—Ç–æ–± –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É ".format(
                                     message.from_user, bot.get_me()),
                                 parse_mode='html', reply_markup=key1)
            hello_count.insert(1, 1)  # –û—Ç–º–µ—á–∞–µ–º —Ñ–∞–∫—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
 
            

        elif message.text=='üåç–ì–¥–µ –Ω–∞—Å –Ω–∞–π—Ç–∏':

            markup = types.InlineKeyboardMarkup(row_width=2)
            item4 = types.InlineKeyboardButton("–•–∞—Ä—å–∫–æ–≤", callback_data='kharkiv')
            item5 = types.InlineKeyboardButton("–ö–∏–µ–≤", callback_data='kiev')

            markup.add(item4, item5)

            bot.send_message(message.chat.id, '–í–∏–±–µ—Ä–µ—Ç–µ –≤–∞—à –≥–æ—Ä–æ–¥', reply_markup=markup)

        elif message.text == "–í–≤–µ—Å—Ç–∏ –ø–æ—á—Ç—É –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏":  # –ü–µ—Ä–µ–∫–∏–¥—ã–≤–∞–µ—Ç –Ω–∞ –≤–≤–æ–¥ –ø–æ—á—Ç—ã
            mail_check(message)
            if message.text == '‚ìÇ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
                welcome(message)

        elif message.text == '‚ìÇ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
            welcome(message)    
        else:
            #bot.send_message(message.chat.id, '–Ø –Ω–µ –∑–Ω–∞—é —á—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å üò¢')
            callback_request(message)
            

@bot.message_handler(content_types=["text"])           
def callback_request(message):
    if int(message.chat.id) == config.owner:
        try:
            bot.send_message(message.chat.id, '–î–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–¥–µ–ª–∞–π —Ä–µ–ø–ª–µ–π')
            bot.forward_message(config.owner, message.chat.id, message.message_id)
            bot.register_next_step_handler(message, process_mind)
            #bot.send_message(message.chat.id, '–ù–µ –≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è!!!\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É –∫–æ–º–∞–Ω–¥—É /send \n–∏ –¥–µ–ª–∞–π—Ç–µ reply –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è')
        except:
            bot.send_message(config.owner, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–∞—à –≤–≤–æ–¥! –ë–æ—Ç –ø—Ä–æ–¥–æ–ª–∂–∏–ª —Å–≤–æ—é —Ä–∞–±–æ—Ç—É.' + ' –û—à–∏–±–∫–∞ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –≤ –±–ª–æ–∫–µ –∫–æ–¥–∞:\n\n <code>@bot.message_handler(content_types=["text"])</code>', parse_mode='HTML')
    else:
        pass
        try:
            bot.forward_message(config.owner, message.chat.id, message.message_id)
            #bot.send_message(message.chat.id)
        except:
            bot.send_message(config.owner, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫!  –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥! –ë–æ—Ç –ø—Ä–æ–¥–æ–ª–∂–∏–ª —Å–≤–æ—é —Ä–∞–±–æ—Ç—É.')
        

@bot.message_handler(commands=['send'])
def process_start(message):
    if int(message.chat.id) == config.owner:
        try:
            bot.send_message(message.chat.id, '–î–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–¥–µ–ª–∞–π —Ä–µ–ø–ª–µ–π')
            bot.forward_message(config.owner, message.chat.id, message.message_id)
            bot.register_next_step_handler(message, process_mind)
        except:
            bot.send_message(message.chat.id, "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫! –û—à–∏–±–∫–∞ –≤–æ–∑–Ω–∏–∫–ª–∞ –≤ –±–ª–æ–∫–µ –∫–æ–¥–∞:\n<code>@bot.message_handler(commands=['send_message'])</code>", parse_mode='HTML')
    else:
        bot.send_message(message.chat.id, '–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!')


def process_mind(message):
    if int(message.chat.id) == config.owner:
        try:
            text = '–°–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ' + str(message.reply_to_message.forward_from.first_name)
            bot.forward_message(message.reply_to_message.forward_from.id, config.owner, message.message_id)
            bot.send_message(config.owner, text)
        except:
            bot.send_message(message.chat.id, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–∞—à –≤–≤–æ–¥! –ë–æ—Ç –ø—Ä–æ–¥–æ–ª–∂–∏–ª —Å–≤–æ—é —Ä–∞–±–æ—Ç—É.' + ' –û—à–∏–±–∫–∞ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –≤ –±–ª–æ–∫–µ –∫–æ–¥–∞:\n\n <code>def process_mind(message)</code>', parse_mode='HTML')
    else:
        bot.send_message(message.chat.id, '–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!')

@bot.message_handler(commands=['id'])
def process_id(message):
    bot.send_message(message.chat.id, "–¢–≤–æ–π ID: " + str(message.from_user.id), parse_mode = 'HTML')
    bot.forward_message(config.owner, message.chat.id, message.message_id)


@bot.message_handler(content_types=['contact'])  # –û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
def phone_check(message):  # –£—Ç–æ—á–Ω—è–µ–º —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ–º –æ–Ω —Å –Ω–∞–º–∏ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è
    if message.text == None:  # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º" —Ç–æ —Ç–µ–∫—Å –±—É–¥–µ—Ç None
        if message.contact.user_id == message.chat.id:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–≤–æ–π –ª–∏ –∫–æ–Ω—Ç–∞–∫—Ç –¥–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            cli_num.append(message.contact.phone_number)
            pre_main(message)
        else:
            bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞!')
            statup(message)
    elif message.text == '‚ìÇ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        welcome(message)
    else:
        statup(message)

@bot.message_handler(regexp = 'Online –ø–æ–º–æ—â—å')
def online_help(message):

    if message.text == "Online –ø–æ–º–æ—â—å":  
        bot.send_message(message.chat.id, '–°–æ–µ–¥–∏–Ω—è—é —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º')
        process_mind(message)
    else:
        statup(message)

@bot.message_handler(regexp = '‚ìÇ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
def menu(message):
    inc_type.clear()
    cli_num.clear()
    cli_mail.clear()
    if message.text == "‚ìÇ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é": 
        bot.send_message(message.chat.id, '–í—Ö–æ–∂—É –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        welcome(message)
    else:
        statup(message)

def mail_check(message):  # –§—É–Ω–∫—Ü–∏—è –≤–≤–æ–¥–∞ –ø–æ—á—Ç—ã
    key1 = telebot.types.ReplyKeyboardMarkup(True, False)
    key1.row("–ü—Ä–æ–≤–µ—Ä–∏—Ç—å")
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É –ø–æ—á—Ç—É ‚§µ')
    if message.text == '–í–≤–µ—Å—Ç–∏ –ø–æ—á—Ç—É –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏':
        bot.register_next_step_handler(message, mail_check2)
    elif message.text == '‚ìÇ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        welcome(message)
 
 
def mail_check2(message):  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ç—á—ã –Ω–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å
    pattern = compile('(^|\s)[-a-z0-9_.]+@([-a-z0-9]+\.)+[a-z]{2,6}(\s|$)')  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≤–ø–∞–¥–∞–µ—Ç –ª–∏ –ø–∞—Ç—Ç–µ—Ä–∫
    is_valid = pattern.match(message.text)
    if is_valid:
        cli_mail.append(message.text)  # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—É—é –ø–æ—á—Ç—É
        pre_main(message)
    elif message.text == '‚ìÇ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        welcome(message)
    else:
        bot.send_message(message.chat.id, "–ü–æ—á—Ç–∞ –≤–≤–µ–¥–µ–Ω–∞ –Ω–µ–≤–µ—Ä–Ω–æ.")
        statup(message)
 
 
def pre_main(message):  # –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
    inc_type.clear()  # –û—á–∏—â–∞–µ–º —Å–ª–æ–≤–∞—Ä—å —Å —Ç–∏–ø–æ–º –∑–∞—è–≤–∫–∏
    key = types.ReplyKeyboardMarkup(True, False)
    key.row('–ö–æ—Ä–ø—É—Å–Ω—ã–µ –ø–æ–ª–æ–º–∫–∏')
    key.row('–ü–∞–π–∫–∞', "–£ –º–µ–Ω—è –¥—Ä—É–≥–æ–π –∑–∞–ø—Ä–æ—Å")
    key.one_time_keyboard = True
    try:  # –°–ø—Ä–∞—à–∏–≤–∞–µ–º —á—Ç–æ –∑–∞ –∏–Ω—Ü–µ–Ω—Ç
        bot.send_message(message.chat.id,
                         "–ò—Ç–∞–∫, {0.first_name}!, —á—Ç–æ —É –≤–∞—Å —Å–ª—É—á–∏–ª–æ—Å—å?.".format(
                             message.from_user, bot.get_me()),
                         parse_mode='html', reply_markup=key)
        print('No problem detected. Message send')
    except OSError:  # –°–ø—Ä–∞—à–∏–≤–∞–µ–º —á—Ç–æ –∑–∞ –∏–Ω—Ü–µ–Ω—Ç –µ—Å–ª–∏ –ø—Ä–µ–¥–∏–¥—É—â–∏–π –≤—ã–∑–≤–∞–ª –æ—à–∏–±–∫—É —Ç–∞–π–º–∞—É—Ç–∞
        print("ConnectionError - Sending again after 5 seconds!!!")
        time.sleep(5)
        bot.send_message(message.chat.id,
                         "–ò—Ç–∞–∫, {0.first_name}, —á—Ç–æ —É –≤–∞—Å —Å–ª—É—á–∏–ª–æ—Å—å?.".format(
                             message.from_user, bot.get_me()),
                         parse_mode='html', reply_markup=key)
        print('Problem solved')
    bot.register_next_step_handler(message, main)
 
 
def main(message):  # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞ –∏ —É—Ç–æ—á–Ω—è–µ–º –µ–≥–æ –ø–æ–¥—Ç–∏–ø
    if message.text == '–ö–æ—Ä–ø—É—Å–Ω—ã–µ –ø–æ–ª–æ–º–∫–∏':
        keyboard = telebot.types.ReplyKeyboardMarkup(True, False)
        keyboard.row('–ü–∏—Ç–∞–Ω–∏–µ')
        keyboard.row('–î–∏—Å–ø–ª–µ–π –∏ –∫–æ—Ä–ø—É—Å')
        keyboard.row('–ö–∞–º–µ—Ä–∞')
        keyboard.row('‚ìÇ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ ‚§µ', reply_markup=keyboard)
        bot.register_next_step_handler(message, incedent)
    elif message.text == '–ü–∞–π–∫–∞':
        keyboard = telebot.types.ReplyKeyboardMarkup(True, False)
        keyboard.row('–ú–æ–¥–µ–º–Ω–∞—è —á–∞—Å—Ç—å', '–ö–æ—Ä–æ—Ç–∫–æ–µ –∑–∞–º—ã–∫–∞–Ω–∏–µ')
        keyboard.row('–ß–∏—Å—Ç–∫–∞ –ø–æ—Å–ª–µ –ø–æ–ø–∞–¥–∞–Ω–∏—è –≤–ª–∞–≥–∏')
        keyboard.row('‚ìÇ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        keyboard.one_time_keyboard = True
        bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ ‚§µ', reply_markup=keyboard)
        bot.register_next_step_handler(message, info)
    elif message.text == '–£ –º–µ–Ω—è –¥—Ä—É–≥–æ–π –∑–∞–ø—Ä–æ—Å':
        task = message.text
        vvod(message)
    elif message.text == '‚ìÇ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        welcome(message)
 
    else:
        bot.send_message(message.chat.id, 'üö´ –î–∞–Ω–Ω—ã–µ –≤–≤–µ–¥–µ–Ω—ã –Ω–µ–≤–µ—Ä–Ω–æ üö´')
        pre_main(message)
 
 
def incedent(message):  # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ–¥—Ç–∏–ø –∏–Ω—Ü–µ–¥–µ–Ω—Ç–∞
    keyboard = telebot.types.ReplyKeyboardMarkup(True, False)
    keyboard.add('‚ìÇ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
 
    if message.text == '–ü–∏—Ç–∞–Ω–∏–µ':
        keyboard = telebot.types.ReplyKeyboardMarkup(True, False)
        keyboard.row('–ó–∞–º–µ–Ω–∞ –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–∞')
        keyboard.row('–®–ª–µ–π—Ñ –∑–∞—Ä—è–¥–∫–∏')
        keyboard.row('–ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –ø–∏—Ç–∞–Ω–∏—è')
        keyboard.add('‚ìÇ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        keyboard.one_time_keyboard = True
        bot.send_message(message.chat.id, '–£–∫–∞–∂–∏—Ç–µ –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É ‚§µ', reply_markup=keyboard)
        bot.register_next_step_handler(message, vvod)
 
    elif message.text == '–î–∏—Å–ø–ª–µ–π –∏ –∫–æ—Ä–ø—É—Å':
        keyboard = telebot.types.ReplyKeyboardMarkup(True, False)
        keyboard.row('–î–∏—Å–ø–ª–µ–π–Ω—ã–π –º–æ–¥—É–ª—å')
        keyboard.row('–°—Ç–µ–∫–ª–æ –¥–∏—Å–ø–ª–µ–π–Ω–æ–≥–æ –º–æ–¥—É–ª—è')
        keyboard.row('–ó–∞–¥–Ω—è—è –∫—Ä—ã—à–∫–∞')
        keyboard.add('‚ìÇ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        keyboard.one_time_keyboard = True
        bot.send_message(message.chat.id, '–£–∫–∞–∂–∏—Ç–µ –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É ‚§µ', reply_markup=keyboard)
        bot.register_next_step_handler(message, vvod)
 
    elif message.text == '–ö–∞–º–µ—Ä–∞':
        keyboard = telebot.types.ReplyKeyboardMarkup(True, False)
        keyboard.row('–û—Å–Ω–æ–≤–Ω–∞—è –∫–∞–º–µ—Ä–∞')
        keyboard.row('–§—Ä–æ–Ω—Ç–∞–ª—å–Ω–∞—è –∫–∞–º–µ—Ä–∞')
        keyboard.row('–°—Ç–µ–∫–ª–æ –∫–∞–º–µ—Ä—ã')
        keyboard.add('‚ìÇ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        keyboard.one_time_keyboard = True
        bot.send_message(message.chat.id, '–£–∫–∞–∂–∏—Ç–µ –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É ‚§µ', reply_markup=keyboard)
        bot.register_next_step_handler(message, vvod)
 
    elif message.text == '‚ìÇ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        welcome(message)
 
    else:
        bot.send_message(message.chat.id, '–î–∞–Ω–Ω—ã–µ –≤–≤–µ–¥–µ–Ω—ã –Ω–µ–≤–µ—Ä–Ω–æ üò¢')
        pre_main(message)
 
 
def info(message):  # –û–±—Ä–∞–±–æ—Ç—ã–≤–∞–µ–º –ø–æ–¥—Ç–∏–ø –∑–∞–ø—Ä–æ—Å–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    if message.text == '‚ìÇ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        welcome(message)
    elif message.text == '–ú–æ–¥–µ–º–Ω–∞—è —á–∞—Å—Ç—å':
        global task
        task = message.text
        vvod(message)
    elif message.text == '–ö–æ—Ä–æ—Ç–∫–æ–µ –∑–∞–º—ã–∫–∞–Ω–∏–µ':
        task = message.text
        vvod(message)
    elif message.text == '–ß–∏—Å—Ç–∫–∞ –ø–æ—Å–ª–µ –ø–æ–ø–∞–¥–∞–Ω–∏—è –≤–ª–∞–≥–∏':
        task = message.text
        vvod(message)
    else:
        text(message)
        bot.send_message(message.chat.id, '–î–∞–Ω–Ω—ã–µ –≤–≤–µ–¥–µ–Ω—ã –Ω–µ–≤–µ—Ä–Ω–æ')
        pre_main(message)
 
 
def vvod(message):  # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    inc_type.append(message.text)
    global task
    if message.text in status:
        task = message.text
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –¥–µ—Ç–∞–ª–∏ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –≤ —Å—Ç—Ä–æ–∫—É –≤–≤–æ–¥–∞ üòä')
        bot.register_next_step_handler(message, text)
    else:
        bot.send_message(message.chat.id, '–î–∞–Ω–Ω—ã–µ –≤–≤–µ–¥–µ–Ω—ã –Ω–µ–≤–µ—Ä–Ω–æ')
        pre_main(message)
 
 
def text(message):  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–∏—Å—å–º–æ
    if message.text == '‚ìÇ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        welcome(message)
    else:
        keyboard = telebot.types.ReplyKeyboardMarkup(True, False)
        keyboard.row('‚ìÇ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        bot.send_message(message.chat.id, '–í–∞—à –∑–∞–ø—Ä–æ—Å \"' + message.text +
                         '\" –ø–æ–ª—É—á–µ–Ω. –ú–æ–∂–µ—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚§µ', reply_markup=keyboard)
        '''addr_from = "mail1@gmail.com"
        addr_to = "mail2@mail.ru"
        password = "password_mail1"
        msg = MIMEMultipart()  # –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        msg['From'] = addr_from
        msg['To'] = addr_to
        msg['Subject'] = (message.text)'''
        body = (f'''
*–ê–≤—Ç–æ—Ä –∑–∞—è–≤–∫–∏: * {message.from_user.first_name};
 
*–¢–µ–ª–µ—Ñ–æ–Ω: * {cli_num};
 
*–¢–∏–ø –∑–∞—è–≤–∫–∏: * {inc_type};
 
*–¢–µ–∫—Å—Ç –∑–∞—è–≤–∫–∏: * {message.text};

*–ü–æ—á—Ç–∞: * - {cli_mail}.
      ''')
        '''msg.attach(MIMEText(body, 'plain'))  # –î–æ–±–∞–≤–ª—è–µ–º –≤ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç
        smtpObj = smtplib.SMTP('smtp.gmail.com', 465)  # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç SMTP
        smtpObj.starttls()  # –ù–∞—á–∏–Ω–∞–µ–º —à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π –æ–±–º–µ–Ω –ø–æ TLS
        smtpObj.login(addr_from, password)  # –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø
        smtpObj.send_message(msg)  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        smtpObj.quit()  # –í—ã—Ö–æ–¥–∏–º'''
        bot.send_message(config.owner_chanal, str(message.from_user.id) + ": " + str(message.from_user.first_name) + ' : ' + message.text + body, parse_mode="Markdown")

@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:            
            if call.data == 'kharkiv':
                markup = types.InlineKeyboardMarkup(row_width=1)
                item8 = types.InlineKeyboardButton("–ü–æ–∫–∞–∑–∞—Ç—å –Ω–∞ –∫–∞—Ä—Ç–µ", url='https://goo.gl/maps/dHuhDU1jPPrin9uk9')

                markup.add(item8)

                bot.send_message(call.message.chat.id, "–†–µ–º–æ–Ω—Ç —Ç–µ—Ö–Ω–∏–∫–∏ Apple –≤ –•–∞—Ä—å–∫–æ–≤–µ —Å –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫–∞ –ø–æ –ø'—è—Ç–Ω–∏—Ü—É —Å  9.00 –¥–æ 18.00 –∏ –≤ —Å—É–±–±–æ—Ç—É –∏ –≤ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω–∏–µ —Å 10.00 –¥–æ 16.00 —É–ª. –ò–≤–∞–Ω–æ–≤–∞, 5", reply_markup=markup)
            elif call.data == 'kiev':
                markup = types.InlineKeyboardMarkup(row_width=2)
                item6 = types.InlineKeyboardButton("–º. –ó–æ–ª–æ—Ç—ã–µ –í–æ—Ä–æ—Ç–∞", callback_data='zoloti_vorota')
                item7 = types.InlineKeyboardButton("–º. –õ—ã–±–µ–¥—Å–∫–∞—è", callback_data='libidska')

                markup.add(item6, item7)

                bot.send_message(call.message.chat.id, '–í–∏–±–µ—Ä–µ—Ç–µ –±–ª–∏–∂–∞–π—à–∏–π –º–∞–≥–∞–∑–∏–Ω', reply_markup=markup)

            elif call.data == 'zoloti_vorota':
                markup = types.InlineKeyboardMarkup(row_width=1)
                item8 = types.InlineKeyboardButton("–ü–æ–∫–∞–∑–∞—Ç—å –Ω–∞ –∫–∞—Ä—Ç–µ", url='https://goo.gl/maps/dHuhDU1jPPrin9uk9')

                markup.add(item8)

                bot.send_message(call.message.chat.id, "–†–µ–º–æ–Ω—Ç —Ç–µ—Ö–Ω–∏–∫–∏ Apple –≤–æ–∑–ª–µ –º–µ—Ç—Ä–æ –ó–æ–ª–æ—Ç—ã–µ –í–æ—Ä–æ—Ç–∞ —Å –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫–∞ –ø–æ –ø'—è—Ç–Ω–∏—Ü—É —Å  10.00 –¥–æ 19.00 –∏ –≤ —Å—É–±–±–æ—Ç—É –∏ –≤ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω–∏–µ —Å 10.00 –¥–æ 16.00 —É–ª. –ò–≤–∞–Ω–æ–≤–∞, 5", reply_markup=markup)
            elif call.data =='libidska':
                markup = types.InlineKeyboardMarkup(row_width=1)
                item9 = types.InlineKeyboardButton("–ü–æ–∫–∞–∑–∞—Ç—å –Ω–∞ –∫–∞—Ä—Ç–µ", url='https://goo.gl/maps/dHuhDU1jPPrin9uk9')

                markup.add(item9)

                bot.send_message(call.message.chat.id, "–†–µ–º–æ–Ω—Ç —Ç–µ—Ö–Ω–∏–∫–∏ Apple –≤–æ–∑–ª–µ –º–µ—Ç—Ä–æ –õ—ã–±–µ–¥—Å–∫–∞—è —Å –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫–∞ –ø–æ –ø'—è—Ç–Ω–∏—Ü—É —Å  10.00 –¥–æ 19.00 –∏ –≤ —Å—É–±–±–æ—Ç—É –∏ –≤ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω–∏–µ —Å 10.00 –¥–æ 16.00 —É–ª. –ò–≤–∞–Ω–æ–≤–∞, 5",  reply_markup=markup)



        



 
            # remove inline buttons
            #bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="—Ç—É—Ç –º–∞—î –±—É—Ç–∏ —Ç–µ–∫—Å—Ç, —è–∫–∏–π –º–æ–∂–Ω–∞ –≤–∏–¥–∞–ª–∏—Ç–∏ –∑ —ñ–Ω–ª–∞–π–Ω–æ–≤–∏—Ö –∫–ª–∞–≤—ñ–∞—Ç—É—Ä?",
                #reply_markup=None)
 
            # show alert
            bot.answer_callback_query(callback_query_id=call.id, show_alert=False,
                text="Apple_bot")
 
    except Exception as e:
        print(repr(e))
 
# RUN
while True:  # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    try:
        bot.polling(none_stop=True)
    except OSError:
        bot.polling(none_stop=True)

